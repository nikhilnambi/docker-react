# FROM node:16-alpine

# WORKDIR /app

# COPY package.json .

# RUN npm install

# COPY . .

# CMD ["npm","run","start"] 

# We are then creating a directory of /home/node/app prior to the WORKDIR instruction. This will prevent a permissions issue since WORKDIR by default will create a directory if it does not exist and set ownership to root.

# The inline chown commands will set ownership of the files you are copying from your local environment to the node user in the container.

# The end result is that some files and directories will no longer be owned by root, and no npm processes will be run by the root user. Instead, they will all be owned and run by the node user.

# Using the WSL terminal build your Docker image as you typically would:
# docker build -f Dockerfile.dev -t USERNAME:frontend .


FROM node:20-alpine

USER node 

RUN mkdir -p /home/node/app

WORKDIR /home/node/app

COPY --chown=node:node ./package.json ./

RUN npm install

COPY  --chown=node:node ./ ./

CMD ["npm","run","start"] 